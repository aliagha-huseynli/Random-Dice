<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACQkJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgAAAAAAyb27AMm9uwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAaFpZBb+2sCG9tKw6oZeSSIB6dk06NzZAAAAAIwAAAA8DAwMCAAAAAAAA
        AAAAAAAAAAAAAKihnwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALKf
        mgAAAAAAAAAAAAAAAAAAAAAAsKCdF9LIwVXWysCT2MvAwtnKv93Xxrny0r+x98m3qfSonJPlhH97sgEB
        AWIAAAAxBQUFDwYGBgIAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACyn5oIw7SrQtTJv5bWyb3l2cu+/drJu//dzL7/4NDD/+LUyf/l2M3/4dPI/9bD
        tv+rmYz/sqOX/7yyqvRMR0WhAAAAWAAAACwAAAAPGxoZAxwbGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALWjnQAAAAAAAAAAAAAA
        AAAAAAAAvK+oEdHFvC3Nv7NPzb6yiNHDtsnUxbj/2cq8/9vKvP/ez8H/4tTJ/+bYzv7n2tH/59rQ/+XZ
        zv/q39f/7eXe/+DRxf+1o5b/r6GU/q2fkf/Ctan/n5aQ21FOS44AAABLAAAAIgEBAQsAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALKgmwAAAAAAAAAAAAAA
        AAAAAAAAtKWeKM/DuGvLvbCrzb6uzs29rOrTw7T/2sq8/9/Qw//l2M3/6+DV/uvf1v7l2M7/5djO/+TX
        zP/k1cv/5NXK/+TWzP/s49v/7eXf/+DPw/+0opX/taec/7iqnv60pJn/tqeb/7apn/mnn5jSPDk4fQAA
        AD4AAAAdBwcHBwoKCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACyoJsIwrSqSc3BtaLMvq/vzr+u/8y6qP/VxLT/3s/C/+XZzv/p3dT/59vS/+jc0//QubH/pXt3/6WC
        cv/k187/5NbL/+XXzP/l18z/5NfM/+XZzv/u5t//7eXf/93Lvf+xoJT/uKqf/7yupP++sab/vK6k/7eo
        nf+yopf/wbas+4eBfbgCAgJgAAAANAAAABYAAAAGAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC4qZ0av66eesm7rMHNvq7/0MGx/9LBsf/ayrz/5dnN/uvg1//g0Mj/0Lmx/97Nw//g0sb/4dLH/7uZ
        kv9iEhH/ezk2/8y1p/+5oZH/6dzS/+XYzf/l2M3/5tjN/+fb0P/x6eT/7uXf/9rIuv+unZH/uauf/76w
        pf+9sKb/mJyI/8a4rv/As6j/t6ic/8Gzp/+4rqbrbmhkmRAQEFIAAAApAgICDwAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC2pZV+0cKy/9vNv//h0sf/4tTK/uTWy//dzMP/nm9q/4dJRv93Ly3/q4B6/97O
        xP/h08f/4tPI//Dn3f+BPTn/s4yG/+ne0//n2c//5tjO/+bZzv/l2c7/5tnP/+jc0//z7ej/7ubh/9jG
        uP+unZD/uauh/8Cxp/9RcUr/OGc1/8C2q//Iu7H/ybyy/8K1qv65q5//u66k/rKpo9dPS0l3AAAAMwAA
        ABwAAAAIDw4OAsK3tAAAAAAAAAAAAAAAAADNv7SV59vS/+DQxf/g0MP/3s7B/97Nwf/i0sf/upaQ/2QS
        Ev9eBgb/sY2G/+TXyv/h0sf/4tTJ/+rf1v9iCgn/2se+/+XZzf/m2c7/5tnO/+faz//n2tD/59rR/+re
        1v/18Ov/7+fh/9TCtv+tnZH/vK2i/6Wekv8nYyf/KWQo/6molv/JvbP/y7+1/87Duf/Lv7X/wbSp/7eo
        nf/XzMT/o5yXqQgHBkIAAAAlAAAAEAAAAAQAAAABAAAAAAAAAADYz8lY5dnQ/9/Pw//ezcH/3s3C/97N
        wv/ezsH/5tnM/7CGf/9dAgL/eS8t/9vKv//h0sf/49bL/86yqv9vGhj/8One/+XYzf/m2c7/59rP/+ba
        0f/o29H/59vS/+vg2P/28u//7ubg/9G+sP+snZH/uqyh/8i1rf9BbkH/H2Mg/4yYff/JvLL/y7+1/87D
        uf/RxLv/0ca8/8zAtv/QxLn/4dbN/5aMhpkBAQE7AAAAJwAAABYDAwMJCgoJAjMxMAD19PMc4NXN9ePU
        yf/dzsH/3s3C/97Nwv/fz8L/4M/C/+fazv+LSUb/WwAA/6p9eP/j1Mn/5dnO/6t4c/+bX1v/7OLY/+bY
        zv/m2c//59rQ/+fb0v/o29H/6N3T/+3j2//49fL/7uXe/8u4qv+snZL/uqyi/8Kzqv+Dj3j/KW8q/1x+
        VP/IvbP/y7+1/87Duf/Rxrz/08m//9XKwf/d08v/5t3V/6WakqEAAAA1AAAAKgEBASAAAAAUAAAACgIC
        AgP///8N4NbOteba0P/ezsH/3s7C/97Nwv/gz8L/4M7C/9/Pwv/j1Mr/bRQT/2AAAP/Zxr7/593S/4o/
        PP/JqqP/59rP/+bZzv/o29D/6NrS/+jb0f/o3dP/6d7V/+7m3v/69/X/7ePd/8WypP+tnZL/uqyi/76w
        pv+8saX/MnE1/yhoKf/KvLL/yr61/8/Duf/Rxbz/08i+/9XKwf/n3tf/4NjR/42DfHQAAAAsBAQEIwMD
        AxwFBQUXAAAAEAEBAQn///8E4dnSbejd1f/fz8P/3s3B/97Nwv/fzcL/4M/C/+DPwv/g0MP/vpeR/2UE
        BP94KCf/3c3F/4EvLf/m2tH/5dfN/+bZz//m2tH/6NvS/+jc0//p3tX/6t/W/+/o4v/7+Pb/7OLb/8Cr
        nv+tnpL/uaug/76vpf/Bs6n/WoFW/xhnGv+boI3/zcC4/83CuP/RxLv/08i+/9jNw//t5t//1MrC62hg
        W0wAAAAiBAQEHAEBARYAAAARAAAADAICAgn///8B3NLLPOrh2u7i1Mn/3c3B/93Nwv/fzsL/4M/C/+DP
        wv/h0MT/4dLH/4xEQf9mAwP/iUI//5JMSv/m2c//5djN/+bZz//m29H/6NvS/+je1P/p39b/6+DY//Hr
        5f/7+fn/6+DY/7mmmP+snZL/uKqf/72vpP/As6j/hZd5/x1sH/9Nd0n/1cO9/83BuP/QxLr/0ca8/97U
        y//r5d//x7uyyyAcGiQBAQEXBgYGEgUEBA0HBgYJBQUFBwgICAX///8B2M7KGObd1c/o3dT/3s3C/93N
        wf/fzsL/4M/C/9/Qw//h0MT/4tTG/9fBuP9pBwf/ZgEB/6Ztaf/k1sz/5djN/+baz//o29L/6NzS/+ne
        1f/r4Nj/6+Ha//Ps6P/9/Pv/6d3W/7Shkv+tnpL/t6ie/7yto//Asqj/oqSQ/yhvKP8RXxP/ybu1/8zA
        t//Qw7v/0cS8/+be1f/i2tT/vK+llwAAAAkWFRUMEA8PBwkJCQUNDAwDKikpARQTEwEAAAAA////ANrO
        xZ/v5uD/4NHF/93Mwf/fzsL/387C/9/Pwv/g0cT/4NHE/+fbz/+4jIX/ZQAA/8Gclf/l18z/5tjO/+ba
        0P/o29L/6NzT/+ne1v/r4dn/7OLa//Tu6v/9/fz/59rS/66cjf+rnJH/taec/7qtof++sab/uK2i/zdy
        M/8IYgj/kpqD/5Oehf8tbS7/0MW9/+zl3v7WzMP/rJ6TRAAAAAAiIiICPzw8AQ4ODgAVFRUAEg8PAA8O
        DgAAAAAAAAAAANHFvFPt5t//5NfN/t7Nwf/ezcL/387C/+DPwv/g0cT/4dLF/+DRxv/m2M//jD88/86x
        qf/l18v/5tnO/+ba0P/o29L/6N3U/+nf1//s4Nr/7ePc//bx7f/+/P3/5NfO/6qXif+rnJD/s6Sa/7mp
        n/+8r6T/xrWs/1d8UP8GYQb/VXtN/12CVP8gZyH/4dDM/+ni3P/Lv7XxAAAAAAAAAAAODg4AOzw8ABMT
        EwAAAAAAAAAAAAAAAAAAAAAAAAAAAObl7Avi18/27OHa/97Pw//ezcL/4M/B/+DPwv/g0MT/4dHF/+DR
        xf/m2dD/hjUy/9zIvv/l183/5tnO/+bZ0P/o29L/6N3U/+rg1//s4tr/7eTd//by7//+/v3/4dPK/6aT
        hf+qmo//sqKX/7annP+7rqP/wbKp/5WZhv8CXgL/KGsl/yZlI/9XfVP/5djS/+DY0v/DtaucAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw7WwAAAAAADZzcWv7+fg/+HSx/7dzML/387C/9/Q
        wv/g0MP/39HF/+LUyP/Qs6v/ijw5/+fb0f/l18z/5tnO/+fa0P/o3NL/6d3U/+rg2P/t4tr/7uXe//j0
        8f/+/f3/3c/F/6OQg/+omY3/r6GV/7Slmv+4qp//vK+k/8a1rv8QWhH/A10E/wBWAP+QmIX/593W/9bM
        w/+4qZ85AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYzslM6+Lb/+bZ
        z/7ezcH/387C/97Nwf/p3tL/7OTZ//Ds4f+PQj//s4F7/+fb0P/l1s3/5tnP/+fa0f/o29P/6d7V/+vh
        2P/s49v/7ubf//j28//+/fz/2cq//6GOgf+nl4v/rZ6T/7Gjl/+1p53/va2j/9O6tv9ielj/AFwA/wBX
        AP+8tKr/6N/Y/8zBt+y6ra0CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD+/f0O5NvT8urh2f/f0MP/3s3B/+jc0P+UUEz/cxcU/3siIP90FBP/59zS/+PVyv/l2M3/5tnP/+fb
        0f/o29P/6d7V/+vh2f/u49v/7+bh//r39v/+/v7/2cvA/6CNgP+mlon/qpuP/6+glf+zppr/jZN8/xxd
        Hv8bXRz/AFoA/xtgG//Sxr3/49zV/8O2rKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/v7+AAAAAAD8/PwF49rTqe7k3v/i1Mn/3s3B/+LTx/9uERD/ZgAA/3gdHP/Rtq7/5djN/+TV
        yv/k18z/5djO/+fZ0P/n3NP/6uDX/+zi2//v5d//8uzm//v5+P/9+/v/3tHH/6KRhP+klIj/p5eM/6yd
        kf+woZb/YXtX/wBNAP8AUwD/AFMA/0NvPv/a0Mj/2dDI/8CyplYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9/PwB49rUZO3m4P/n3NP/3s7C/+HTxv/Osqn/v5eP/9W+
        tP/h1Mj/4tLI/+XZ0P/r4Nj/7+fh//Hq5f/x7eX/8+/m//Xx6f/18uv/9fPs//X07f/z8On/7efe/9nS
        yP/HvbX/sqSa/6iYjP+qm4//j497/3WGZv9yh2T/aoNf/5ebhv/j2tP/y8C46bmqnysAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA39fQNO3m4Orv6OL/4NDF/97O
        wf/g0cb/6NzT//Do4v/38u//9vXw//Tz6//08un/8/Hq//Pw6//x7PD/4Nfm/83B2v/Uy9z/6OPq//v5
        9//7+Pf/+vf1//f18f/z8un/8vDo/+bi2//Kvrb/sqSa/7Cil/+2qJ3/uKuf/8S3rf/i2tT/v7Koxqyb
        kwkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0sjEDefe
        2MH07ur/7+nh//Ds5f/u7OT/6OTa/uHczv/f2Mv/5N3S/+nj3P/w6eX/8+7r/4V8tP8mH47/GhiR/xwb
        l/8bG5X/GRaM/ygiif+elL3/+/jw//Tw7f/08e7/9PHu//Pw6v/18+z/8Ozl/9nSyf/FubD/uauh/8q9
        tP/Rx8D/uqygjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AOLc2C3k3td82tK7r9DHrurPxKv/0MWx/9DFtf/Sxbf/1cu8/tzTxv/m3dT/7OXf/8zF
        0f+imrv/fnWm/3Bnnv9xZ5//gnmo/6efvv/Px9H/8erj/+3n4P/t5uH/7ebh/+7p5P/w6+f/8e3p//Tw
        7f/w7eb/5uHZ/9fOx//Ctav/uKmfOgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6uXkAOHa2QH///8B////AAAAAACxn5Yht6aLbcKzlMXNv6T71sq3/9rP
        wv/h18z/6uDY/+3k3f/t5N3/7OTc/+vk3P/s49v/6uLb/+rh2v/p4Nj/6N7W/+bc1f/m3NT/5dzT/+Xd
        0//n39H/59/O/uTcyvrk3crv493J2eDZysPRx8BxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALWlmgAAAAAAAAAAAAAA
        AACOeYYMu6yRU9DCqJ3f1cDO5t3Q8+rh1f/s49n/6+HZ/+vh1//n3tL/5dzQ++Tbzujk2svV4NbCxdrO
        ua/Wy7KSz8Olcsi5mlW+r5M0pZGGHAAAAAIAAAAAAAAAAAAAAAAAAAAA2NDHAMO3tAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtKKfALSmfgAAAAAAAAAAAAAAAACwno4R1cqwN9nOu3bc0b+02tC+tdnOvIrZzrpZ2c62PdPG
        qCu/sZMYmYF7CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALGhnQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        +Af//wAA//+AAf//AAD/+AAAf/8AAP+AAAA//wAA+AAAAA//AADAAAAAA/8AAIAAAAAB/wAAAAAAAAB/
        AACAAAAAAD8AAIAAAAAAPwAAgAAAAAB/AADAAAAAAH8AAMAAAAAAfwAAwAAAAAB/AADAAAAAAP8AAOAA
        AAAA/wAA4AAAAAD/AADgAAAAAf8AAPAAAAAB/wAA8AAAAAH/AADwAAAAA/8AAPgAAAAD/wAA+AAAAAP/
        AAD4AAAAA/8AAP4AAAAH/wAA/+AAAA//AAD//AAP//8AAP//x////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>